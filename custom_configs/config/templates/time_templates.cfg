##############################################################################
##############################################################################
#
# Different Time Check Interval Services
#
##############################################################################
##############################################################################
##############################################################################
# Purpose of time templates :
# Simply define checks behavior of services with time template to avoid
# false alerts.
# There are three time template type : short, medium, long
# - short means that it will be no retry check for service to be in hard state
# - medium let a time period in soft state for service that can have peak load
# - long let a greater time period in soft state, meant to service where
# great variation and long charge time period are usual.
##############################################################################
# Check every 5min with immediate hard state
define service {
  name                           5min_short
  use                            generic-service
  check_interval                 5
  max_check_attempts             1
  register                       0
  retry_interval                 2
}

# Check every 5min with hard state 3min after first non-OK detection
define service {
  name                           5min_medium
  use                            generic-service
  check_interval                 5
  max_check_attempts             2
  register                       0
  retry_interval                 3
}

# Check every 5min with hard state after 30min
define service {
  name                           5min_long
  use                            generic-service
  check_interval                 5
  max_check_attempts             6
  register                       0
  retry_interval                 5
}

# Check every 10min with immediate hard state
define service {
  name                           10min_short
  use                            generic-service
  check_interval                 10
  max_check_attempts             1
  register                       0
  retry_interval                 5
}

# Check every 10min with hard state 10min after first non-OK detection
define service {
  name                           10min_medium
  use                            generic-service
  check_interval                 10
  max_check_attempts             2
  register                       0
  retry_interval                 10
}

# Check every 10min with hard state after 1hour
define service {
  name                           10min_long
  use                            generic-service
  check_interval                 10
  max_check_attempts             6
  register                       0
  retry_interval                 10
}

# Check every 20min with immediate hard state
define service {
  name                           20min_short
  use                            generic-service
  check_interval                 20
  max_check_attempts             1
  register                       0
  retry_interval                 1
}

# Check every 20min with hard state 20min after first non-OK detection
define service {
  name                           20min_medium
  use                            generic-service
  check_interval                 20
  max_check_attempts             2
  register                       0
  retry_interval                 20
}

# Check every 20min with hard state after 2hours
define service {
  name                           20min_long
  use                            generic-service
  check_interval                 20
  max_check_attempts             6
  register                       0
  retry_interval                 20
}

# Check every 30min with immediate hard state
define service {
  name                           30min_short
  use                            generic-service
  check_interval                 30
  max_check_attempts             1
  register                       0
  retry_interval                 15
}

# Check every 30min with hard state 30min after first non-OK detection
define service {
  name                           30min_medium
  use                            generic-service
  check_interval                 30
  max_check_attempts             2
  register                       0
  retry_interval                 30
}

# Check every 30min with hard state after 6hours
define service {
  name                           30min_long
  use                            generic-service
  check_interval                 30
  max_check_attempts             6
  register                       0
  retry_interval                 30
}

# Check every 1hour with immediate hard state
define service {
  name                           1hour_short
  use                            generic-service
  check_interval                 60
  max_check_attempts             1
  register                       0
  retry_interval                 20
}

# Check every 1hour with hard state 1hour after first non-OK detection
define service {
  name                           1hour_medium
  use                            generic-service
  check_interval                 60
  max_check_attempts             2
  register                       0
  retry_interval                 60
}

# Check every 1hour with hard state after 6hours
define service {
  name                           1hour_long
  use                            generic-service
  check_interval                 60
  max_check_attempts             6
  register                       0
  retry_interval                 60
}

# Check every 12hours with immediate hard state
define service {
  name                           12hours_short
  use                            generic-service
  check_interval                 720
  max_check_attempts             1
  register                       0
  retry_interval                 360
}

# Check every 12hours with hard state 12hours after first non-OK detection
define service {
  name                           12hours_medium
  use                            generic-service
  check_interval                 720
  max_check_attempts             2
  register                       0
  retry_interval                 720
}

# Check every 12hours with hard state after 3days
define service {
  name                           12hours_long
  use                            generic-service
  check_interval                 720
  max_check_attempts             6
  register                       0
  retry_interval                 720
}

# Check every weeks with immediate hard state
define service {
  name                           1week_short
  use                            generic-service
  check_interval                 10080
  max_check_attempts             1
  register                       0
  retry_interval                 10
}

# Check every weeks with hard state 1 week after first non-OK detection
define service {
  name                           1week_medium
  use                            generic-service
  check_interval                 10080
  max_check_attempts             2
  register                       0
  retry_interval                 10080
}

# Check every weeks with hard state after 4 weeks
define service {
  name                           1week_long
  use                            generic-service
  check_interval                 10080
  max_check_attempts             6
  register                       0
  retry_interval                 10080
}

